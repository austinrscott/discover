import pygame
from pygame.constants import QUIT, KEYDOWN, KEYUP, MOUSEMOTION, MOUSEBUTTONUP, MOUSEBUTTONDOWN, JOYAXISMOTION, \
    JOYBALLMOTION, JOYHATMOTION, JOYBUTTONUP, JOYBUTTONDOWN, K_ESCAPE, K_KP_MINUS, K_KP_PLUS

from event import TickEvent, QuitEvent, MapZoomEvent


class InputController:
    """InputController takes Pygame events generated by the mouse and
    keyboard (raw SDL events) and uses them to control the model. It
    also keeps the view responsive. It does this by sending Requests
    or controlling the Pygame display directly, as with the QuitEvent.
    """

    def __init__(self, event_manager):
        self.event_manager = event_manager
        self.event_manager.register_listener(self)

    def notify(self, inbound_event):
        if isinstance(inbound_event, TickEvent):

            # Parse SDL events from Pygame and interpret them for game events
            for SDL_event in pygame.event.get([QUIT,
                                               KEYDOWN,
                                               KEYUP,
                                               MOUSEMOTION,
                                               MOUSEBUTTONUP,
                                               MOUSEBUTTONDOWN,
                                               JOYAXISMOTION,
                                               JOYBALLMOTION,
                                               JOYHATMOTION,
                                               JOYBUTTONUP,
                                               JOYBUTTONDOWN]):
                outbound_event = None
                if SDL_event.type == QUIT:
                    outbound_event = QuitEvent()
                elif SDL_event.type == KEYDOWN \
                        and SDL_event.key == K_ESCAPE:
                    outbound_event = QuitEvent()
                elif SDL_event.type == KEYDOWN \
                        and SDL_event.key == K_KP_PLUS:
                    outbound_event = MapZoomEvent(2)
                elif SDL_event.type == KEYDOWN \
                        and SDL_event.key == K_KP_MINUS:
                    outbound_event = MapZoomEvent(-2)
                elif SDL_event.type == MOUSEBUTTONDOWN:
                    raise NotImplementedError("Mouse control not implemented yet")

                if outbound_event:
                    self.event_manager.post(outbound_event)
